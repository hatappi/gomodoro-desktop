name: Release

on:
  release:
    types: [published]

permissions:
  # To add the built application to the release, we need to write to the contents permission.
  # https://www.electronforge.io/config/publishers/github#authentication
  contents: write
  id-token: write

jobs:
  build-darwin:
    name: Build for macOS
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci

      - name: Add macOS certificate
        run: |
          ./scripts/add-macos-cert.sh
        env:
          # For Code Signing
          MACOS_CERT_P12_BASE64: ${{ secrets.MACOS_CERT_P12_BASE64 }}
          MACOS_CERT_PASSWORD: ${{ secrets.MACOS_CERT_PASSWORD }}

      - name: Generate App Store Connect API key file
        run: |
          echo "${{ secrets.APPLE_API_KEY_BASE64 }}" | base64 -d > appstore-connect-api-key.p8
      
      - name: Build for ${{ matrix.arch }}
        run: npm run publish -- --dry-run --platform=darwin --arch=${{ matrix.arch }}
        env:
          # For Notarization
          APPLE_API_KEY: appstore-connect-api-key.p8
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-darwin-${{ matrix.arch }}
          path: out/**/*

  release:
    name: Create Release
    needs: [build-darwin]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: build-*
          path: out
          merge-multiple: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Publish to GitHub Releases
        run: npm run publish -- --from-dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
